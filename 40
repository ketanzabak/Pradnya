#include <iostream>
class Base
{
public:
virtual ~Base()=0; 
};
Base::~Base()
{
std::cout << "Pure virtual destructor is called";
}

class Derived : public Base
{
public:
~Derived()
{
std::cout << "~Derived() is executed";
}
};

int main()
{
Base *b = new Derived();
delete b;
return 0;
}

$ a) Runs perfectly but does not output anything
$ b) ~Derived() is executed Pure virtual destructor is called
$ c) Pure virtual destructor is called ~Derived() is executed
$ d) Error

$2

